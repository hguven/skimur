Framework '4.0x86'

properties {
    $base_dir = resolve-path .
    $source_dir = "$base_dir\src"
    $build_dir = "$base_dir\build"
    $dist_dir = "$base_dir\dist"
    $tools_dir = "$base_dir\tools"
    $global:config = "Debug"
	$buildNumber = if ( $env:APPVEYOR_BUILD_NUMBER  -ne $NULL) { $env:APPVEYOR_BUILD_NUMBER  } else { "9999" }
	$version = "0.0.0.$buildNumber"
    $nuget = "$tools_dir\NuGet\NuGet.exe"
}

task default -depends local
task local -depends compile, test
task full -depends local, dist
task ci -depends clean, release, commonAssemblyInfo, local, dist

task clean {
    delete_directory $build_dir
    delete_directory $dist_dir
}

task release {
    $global:config = "Release"
}

task compile -depends clean {
    create_directory $build_dir
    exec { & $nuget restore "$source_dir\Skimur.sln" }
	exec { msbuild /t:Clean /t:Build /p:Configuration=$config /p:VisualStudioVersion=14.0 /p:Platform='Any CPU' /p:OutputPath="$build_dir" /p:CI=true $source_dir\Skimur.sln }
}

task commonAssemblyInfo {
    $commit = if ($env:BUILD_VCS_NUMBER -ne $NULL) { $env:BUILD_VCS_NUMBER } else { git log -1 --pretty=format:%H }
    create-globalAssemblyInfo "$commit" "$source_dir\GlobalAssemblyInfo.cs"
}

task test {
	# todo
}

task dist {
	create_directory $dist_dir
	copy_files "$build_dir\_PublishedWebsites\Skimur.Web.Public" "$dist_dir\Web"
    copy_files "$build_dir\Subs.Worker.Cons" "$dist_dir\Subs.Worker.Cons"
}

function global:create-globalAssemblyInfo($commit, $filename)
{
	$date = Get-Date
    "using System;
using System.Reflection;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: AssemblyVersionAttribute(""$version"")]
[assembly: AssemblyFileVersionAttribute(""$version"")]
[assembly: AssemblyCopyrightAttribute(""Copyright Skimur 2013-" + $date.Year + """)]
[assembly: AssemblyProductAttribute(""Skimur"")]
[assembly: AssemblyTrademarkAttribute(""Skimur"")]
[assembly: AssemblyCompanyAttribute("""")]
[assembly: AssemblyConfigurationAttribute(""$config"")]
[assembly: AssemblyInformationalVersionAttribute(""$config"")]"  | out-file $filename -encoding "ASCII"    
}

function global:copy_files($source, $destination, $regexFilter = $NULL) {

    create_directory $destination

	if($regexFilter -eq $null) {
		$regexFilter = ".*"
	}

    Get-ChildItem $source -Recurse -Exclude $exclude | Where-Object {$_.FullName -match $regexFilter} |  Copy-Item -Destination {Join-Path $destination $_.FullName.Substring($source.length)} 
}

function global:copy_file($source, $destination) {
    if(!(Test-Path $source)) {
        Write-Error "The file $source doesn't exist, so it can't be copied."
    }
    Copy-Item $source $destination
}


function global:create_directory($directory_name) {
    mkdir $directory_name  -ErrorAction SilentlyContinue  | out-null
}

function global:delete_directory($directory_name) {
    rd $directory_name -recurse -force  -ErrorAction SilentlyContinue | out-null
}