@model ManageEmailViewModel
@{
    Layout = "_LayoutManageAccount.cshtml";
    ViewBag.Title = "Manage email";
}

<h2 class="page-header">@ViewBag.Title</h2>

<div class="form-group">
    <label>Current email</label>
    <p class="form-control-static">
        @(!string.IsNullOrEmpty(Model.CurrentEmail) ? Model.CurrentEmail : "not set")
    </p>
</div>

@if (!string.IsNullOrEmpty(Model.CurrentEmail) && !Model.IsCurrentEmailConfirmed)
{
    using (Html.BeginForm("ReSendEmailConfirmation", "Manage"))
    {
        @Html.AntiForgeryToken()
        <p class="alert alert-info">
            <strong>NOTE:</strong> Your email is not currently confirmed. Doing so will help you recover passwords, and will also help you look less like spam.<br />
            <a href="javascript:void(0);" onclick="$(this).closest('form').submit()"><strong>Click here</strong></a> to confirm your email address.
        </p>
    }
}

@if (!Model.IsPasswordSet)
{
    <p class="alert alert-info">
        <strong>NOTE:</strong> In order to update your email address, you must have a password established. <a href="@Url.SetPassword()"><strong>Click here</strong></a> to set establish a password on your account.
    </p>
}
else
{
    using (Html.BeginForm("ManageEmail", "Manage", FormMethod.Post))
    {
        if (!string.IsNullOrEmpty(Model.CurrentEmail))
        {
            <h4>Change email</h4>
        }
        else
        {
            <h4>Set email</h4>
        }
        @Html.AntiForgeryToken()
        @Html.ClientValidationErrorsContainer()
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NewEmail, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.NewEmail, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NewEmailConfirmed, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.NewEmailConfirmed, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <input type="submit" value="@(!string.IsNullOrEmpty(Model.CurrentEmail) ? "Change email" : "Set email")" class="btn btn-primary" />
        </div>
    }
}