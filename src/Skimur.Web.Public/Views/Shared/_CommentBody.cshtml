@using Subs
@model Subs.ReadModel.CommentNode
<div class="disc-body">
    <div class="disc-left">
        <div class="disc-voting @(Model.Comment.CurrentUserVote != null ? Model.Comment.CurrentUserVote == VoteType.Down ? "voted-down" : "voted-up" : "")">
            <span class="up login-required" onclick="return skimurui.comments.voteUp(this)"></span>
            <span class="down login-required" onclick="return skimurui.comments.voteDown(this)"></span>
        </div>
    </div>
    <div class="disc-main">
        <div class="disc-tagline">
            <a href="javascript:void(0)" class="expand" onclick="return skimurui.comments.toggleExpand(this)">[&#8211;]</a>
            @if (Model.Comment.Comment.Deleted)
            {
                <span href="javascript:void(0)" class="author deleted">deleted</span>
            }
            else
            {
                <a href="/user/@Model.Comment.Author.UserName" class="author">@Model.Comment.Author.UserName</a>
                <span class="score">@(Model.Comment.Score) point@(Model.Comment.Score == 1 ? "" : "s")</span>
            }
            <time class="timestamp">@Html.Age(Model.Comment.Comment.DateCreated) ago</time>@if (Model.Comment.Comment.DateEdited.HasValue)
            {<em>*</em>}
        </div>
        <div class="disc-content">
            @Html.Raw(Model.Comment.Comment.BodyFormatted)
        </div>
        <textarea class="disc-content-unformatted hidden">@Html.Raw(Model.Comment.Comment.Body)</textarea>
        <ul class="disc-options">
            @if (!Model.Comment.Comment.Deleted)
            {
                <li class="first">
                    <a href="@Url.Comment(Model.Comment.Sub.Name, Model.Comment.Post, Model.Comment.Comment)">permalink</a>
                </li>
                if (Model.Comment.CanDelete)
                {
                    <li class="delete">
                        <a href="javascript:void(0);" onclick="return skimurui.comments.delete(this)">delete</a>
                    </li>
                }
                <li class="reply">
                    <a href="javascript:void(0);" onclick="return skimurui.comments.startReply(this)">reply</a>
                </li>
                if (Model.Comment.CanEdit)
                {
                    <li class="edit">
                        <a href="javascript:void(0);" onclick="return skimurui.comments.startEdit(this)">edit</a>
                    </li>
                }
                if (Model.Parent != null)
                {
                    <li class="perma">
                        @if (Model.IsParentVisible)
                        {
                            <a href="#@Model.Parent.Comment.Id">parent</a>
                        }
                        else
                        {
                            <a href="@Url.Comment(Model.Parent.Sub.Name, Model.Parent.Post, Model.Parent.Comment)">parent</a>
                        }
                    </li>
                }
                if (Model.Comment.CanReport)
                {
                    <li class="report">
                        <a href="javascript:void(0);" onclick="return skimurui.comments.report(this);">report</a>
                    </li>
                }
                if (Model.Comment.CanManage)
                {
                    if (Model.Comment.Reports != null && Model.Comment.Reports.Count > 0)
                    {
                        <li class="reports">
                            <a href="javascript:void(0);" onclick="return skimurui.comments.toggleReports(this);">reports (@Model.Comment.Reports.Count)</a>
                        </li>
                        <li class="clear-reports">
                            <a href="javascript:void(0);" onclick="return skimurui.comments.clearReports(this);">clear reports</a>
                        </li>
                    }
                    <li class="ignore-reports">
                        <a href="javascript:void(0);" onclick="return skimurui.comments.ignoreReports(this);">ignore reports</a>
                    </li>
                    <li class="unignore-reports">
                        <a href="javascript:void(0);" onclick="return skimurui.comments.unignoreReports(this);">unignore reports</a>
                    </li>
                }
                if (Model.CanMarkRead.HasValue && Model.CanMarkRead.Value)
                {
                    <li class="mark-unread">
                        <a href="javascript:void(0);" onclick="return skimurui.messages.markAsUnread(this)" class="reply">mark unread</a>
                    </li>
                    <li class="mark-read">
                        <a href="javascript:void(0);" onclick="return skimurui.messages.markAsRead(this)" class="reply">mark read</a>
                    </li>
                }
            }
        </ul>
        @if (Model.Comment.CanManage && Model.Comment.Reports != null && Model.Comment.Reports.Count > 0)
        {
            <div class="disc-reports hidden">
                @foreach (var report in Model.Comment.Reports)
                {
                    <div class="report-summary">
                        <b>Reports:</b><br />
                        @report.Reason&nbsp;
                        @if (!string.IsNullOrEmpty(report.UserName))
                        {
                            <text>(reported by <a href="@Url.User(report.UserName)">@report.UserName</a>)</text>
                        }
                    </div>
                }
            </div>
        }
        <div class="disc-staging"></div>
    </div>
</div>