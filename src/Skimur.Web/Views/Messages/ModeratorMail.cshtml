@model InboxViewModel

@{
    switch (Model.InboxType)
    {
        case InboxType.All:
            ViewBag.Title = "All messages";
            break;
        case InboxType.Unread:
            ViewBag.Title = "Unread messages";
            break;
        case InboxType.Messages:
            ViewBag.Title = "Private messages";
            break;
        case InboxType.CommentReplies:
            ViewBag.Title = "Comment replies";
            break;
        case InboxType.PostReplies:
            ViewBag.Title = "Post replies";
            break;
        case InboxType.Mentions:
            ViewBag.Title = "Mentions";
            break;
        case InboxType.ModeratorMail:
            ViewBag.Title = "Moderator mail";
            break;
        case InboxType.ModeratorMailSent:
            ViewBag.Title = "Sent moderator mail";
            break;
        case InboxType.ModeratorMailUnread:
            ViewBag.Title = "Unread moderator mail";
            break;
    }
}

<div class="row">
    <div class="@(Model.Sub == null ? "col-md-12" : "col-md-9")">
        <div class="form-group">
            <ul class="nav nav-tabs" role="tablist">
                <li class="@(Model.InboxType == InboxType.ModeratorMail ? "active" : "")"><a href="@(Model.Sub != null ? Url.MessagesForSub(Model.Sub.Name) : Url.MessagesForModeratedSubs())">All</a></li>
                <li class="@(Model.InboxType == InboxType.ModeratorMailUnread ? "active" : "")"><a href="@(Model.Sub != null ? Url.MessagesForSubUnread(Model.Sub.Name) : Url.MessagesForModeratedSubsUnread())">Unread</a></li>
                <li class="@(Model.InboxType == InboxType.ModeratorMailSent ? "active" : "")"><a href="@(Model.Sub != null ? Url.MessagesForSubSent(Model.Sub.Name) : Url.MessagesForModeratedSubsSent())">Sent</a></li>
            </ul>
        </div>
        <div class="messages-container">
            @foreach (var message in Model.Messages)
            {
                @Html.Partial("_Message", message)
            }
        </div>
        @if (Model.Messages.HasPreviousPage || Model.Messages.HasNextPage)
        {
            <div class="row">
                <div class="list-pager">
                    @Html.Pager(Model.Messages)
                </div>
            </div>
        }
    </div>
    @if (Model.Sub != null)
    {
        <div class="col-md-3">
            @Component.SideBar(subId: Model.Sub.Id)
        </div>
    }
</div>

@section header {
   @{ await Html.RenderPartialAsync("_HeaderNav", Model.IsModerator); }
}