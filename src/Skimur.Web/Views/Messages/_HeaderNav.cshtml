@model bool
@{
    // the model is a boolean indicating if we are a mod or not
    var navigationKey = ViewBag.ManageNavigationKey;
}
<div class="header-nav">
    <div class="hidden-xs">
        <ul class="nav nav-tabs">
            <li class="@(navigationKey == "compose" ? "active" : null)"><a href="@Url.Compose()">Send a message</a></li>
            <li class="@(navigationKey == "inbox" ? "active" : null)"><a href="@Url.Inbox()">Inbox</a></li>
            <li class="@(navigationKey == "sent" ? "active" : null)"><a href="@Url.Sent()">Sent</a></li>
            @if (Model)
            {
                <li class="@(navigationKey == "moderatormail" ? "active" : null)"><a href="@Url.MessagesForModeratedSubs()">Moderator Mail</a></li>
            }
        </ul>
    </div>
    <div class="visible-xs-block">
        <ul class="nav nav-tabs">
            <li class="dropdown active">
                <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0);">
                    @{ RenderTitle(navigationKey); } <span class="caret"></span>
                </a>
                <ul class="dropdown-menu">
                    <li class="@(navigationKey == "compose" ? "active" : null)"><a href="@Url.Compose()">Send a message</a></li>
                    <li class="@(navigationKey == "inbox" ? "active" : null)"><a href="@Url.Inbox()">Inbox</a></li>
                    <li class="@(navigationKey == "sent" ? "active" : null)"><a href="@Url.Sent()">Sent</a></li>
                    @if (Model)
                    {
                        <li class="@(navigationKey == "moderatormail" ? "active" : null)"><a href="@Url.MessagesForModeratedSubs()">Moderator mail</a></li>
                    }
                </ul>
            </li>
        </ul>
    </div>
</div>
@functions {
    public void RenderTitle(string navigationKey)
    {
        switch (navigationKey)
        {
            case "compose":
                ViewContext.Writer.Write("Send a message");
                break;
            case "inbox":
                ViewContext.Writer.Write("Inbox");
                 break;
            case "sent":
                ViewContext.Writer.Write("Sent");
                 break;
            case "moderatormail":
                ViewContext.Writer.Write("Moderator mail");
                 break;
        }
    }
}