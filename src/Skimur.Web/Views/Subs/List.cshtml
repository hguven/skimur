@model PagedList<SubWrapped>
@{
    ViewBag.Title = "Subs";
    var navigationKey = (string)ViewBag.NavigationKey;
    switch (navigationKey)
    {
        case "popular":
            ViewBag.Title = "Popular subs";
            break;
        case "new":
            ViewBag.Title = "New subs";
            break;
        case "subscribed":
            ViewBag.Title = "Subscribed subs";
            break;
        case "moderating":
            ViewBag.Title = "Moderating subs";
            break;
    }
}

@section header {
    @{ await Html.RenderPartialAsync("_HeaderNav"); }
}

<div class="row">
    <div class="col-lg-9 col-sm-8">

        @if (navigationKey != "subscribed" && navigationKey != "moderating")
        {
            <h2 class="page-header">@ViewBag.Title</h2>
        }

        @if (navigationKey == "subscribed" || navigationKey == "moderating")
        {
            <div class="form-group">
                <ul class="nav nav-tabs">
                    <li class="@(navigationKey == "subscribed" ? "active" : null)"><a href="@Url.SubsSubscribed()">Subscribed</a></li>
                    <li class="@(navigationKey == "moderating" ? "active" : null)"><a href="@Url.SubsModerating()">Moderating</a></li>
                </ul>
            </div>
        }

        @if (Model.Count == 0)
        {
            <p>
                @("No subs were found")
            </p>
        }
        else
        {
            using (var enumerator = Model.GetEnumerator())
            {
                while (enumerator.MoveNext())
                {
                    <div class="row">
                        <div class="col-md-6">@{ await Html.RenderPartialAsync("_SubDetails", enumerator.Current); }</div>
                        @if (enumerator.MoveNext())
                        {
                            <div class="col-md-6">@{ await Html.RenderPartialAsync("_SubDetails", enumerator.Current); }</div>
                        }
                    </div>
                }
            }
        }
        @if (Model.HasPreviousPage || Model.HasNextPage)
        {
            <div class="row">
                <div class="list-pager">
                    @Html.Pager(Model)
                </div>
            </div>
        }
    </div>
    <div class="col-lg-3 col-sm-4">
        <div class="panel panel-search">
            <div class="input-group">
                <input id="subQuery" type="text" class="form-control" placeholder="Search..." value="@ViewBag.Query">
                @if (!string.IsNullOrEmpty(ViewBag.Query))
                {
                    <a class="input-group-addon btn btn-primary" href="@Url.Subs()"><span class="fa fa-close"></span></a>
                }
                <span id="subQuerySearch" class="input-group-addon btn btn-primary"><span class="fa fa-search"></span></span>
            </div>
        </div>

        @Component.SideBar(showSearch:false)
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        $(function () {
            $("#subQuerySearch").click(function (e) {
                e.preventDefault();
                var query = $("#subQuery").val();
                if (query) {
                    window.location = "@Url.Subs()?query=" + query;
                } else {
                    window.location = "@Url.Subs()";
                }
            });
            $("#subQuery").enterKey(function (e) {
                e.preventDefault();
                $("#subQuerySearch").click();
            });
        });
    </script>
}
